/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

//@require @packageOverrides
Ext.Loader.setConfig({

});

Ext.application({
    models: [
        'Transaction',
        'Merchants',
        'Agents',
        'Account',
        'Users2'
    ],
    stores: [
        'User_Store'
    ],
    views: [
        'Viewport',
        'Authorisation_screen',
        'registration_options',
        'customer_registration_form',
        'splash_screen',
        'authentication_screen',
        'Verification_screen',
        'customer_dashboard',
        'merchant_dashboard',
        'agent_dashboard'
    ],
    controllers: [
        'main_controller',
        'dashboard_controller'
    ],
    name: 'FlexiPay',

    launch: function() {
        // Create some aliases to save some typing.
        var WELL_KNOWN = blackberrynfc.ndef.tnf.WELL_KNOWN;
        var decodeRecords = blackberrynfc.ndef.message.decodeRecords;

        // When a tag is read by the OS - this handler will be triggered.
        function onInvoked(onInvokedInfo) {

            console.log("1. Getting the transaction Session....");
            var transactionObject = localStorage.getItem('transactionObject');
            console.log(transactionObject);
            transactionObject=JSON.parse(transactionObject); 

            Ext.Viewport.setMasked(false); // hide the load screen        

            if(transactionObject.amount){
                //TODO: Find Out why Its throwing an Exception when back button is pressed
                Ext.Msg.confirm('Action Confirm', 'Send Money to this Party\n '+ "Amount:" + transactionObject.amount, function(buttonId) {
                    if(buttonId == 'yes') {   
                        try {
                            if ("com.tomkimani.d20121122.ww.a" == onInvokedInfo.target && onInvokedInfo.data) {
                                // Convert the bytes to records.
                                var records = decodeRecords(onInvokedInfo.data);

                                if (records.length > 0) {
                                    var record = records[0];

                                    if (record.isType(WELL_KNOWN, "Sp")) {
                                        var recipient_id=record.getText();			

                                        console.log("1.Getting User-Session....");
                                        //Check for User Session Storage Data. Is It Available
                                        var sessionObject = localStorage.getItem('sessionObject');
                                        console.log(sessionObject);
                                        sessionObject=JSON.parse(sessionObject); 

                                        if(sessionObject.user_id){
                                            //Send this user-id to the server with a http post
                                            console.log("2.Performing transaction....");  

                                            //Set Masked
                                            Ext.Viewport.setMasked({
                                                xtype: 'loadmask',
                                                message: 'Performing transaction....'
                                            });

                                            //B) Perform User Login Process with Mobile Number
                                            Ext.Ajax.request({
                                                url: 'http://41.89.68.188/restserver/index.php/api/Flexipay_server/do_transaction/format/json',
                                                method: 'POST',
                                                params: {
                                                    sender_id:sessionObject.user_id,
                                                    recepient_id:recipient_id,
                                                    amount:transactionObject.amount,
                                                    transaction_type:transactionObject.transaction_type	
                                                },

                                                success:function(result)
                                                {
                                                    // 1. Remove the Mask.	
                                                    Ext.Viewport.setMasked(false); 
                                                    //2. Scrutinize the Results
                                                    var data = Ext.JSON.decode(result.responseText.trim());

                                                    var transaction = "Transaction "  + data.transaction_id + ' has been Confirmed.'+data.transaction_type + ' of Ksh ' + data.amount + ' has been transfered from '+ data.sender_id + 'to '+ data.recipient_id + '. Your new Balance is Ksh '+ data.sender_balance;                               

                                                    if (!this.overlay) {
                                                        console.log("2.Setting Overlay");	
                                                        this.overlay = Ext.Viewport.add({
                                                            xtype: 'panel',
                                                            modal: true,
                                                            hideOnMaskTap: true,
                                                            showAnimation: {
                                                                type: 'popIn',
                                                                duration: 250,
                                                                easing: 'ease-out'
                                                            },
                                                            hideAnimation: {
                                                                type: 'popOut',
                                                                duration: 250,
                                                                easing: 'ease-out'
                                                            },
                                                            centered: true,
                                                            width: Ext.os.deviceType == 'Phone' ? 260 : 400,
                                                            height: Ext.os.deviceType == 'Phone' ? 220 : 400,
                                                            styleHtmlContent: true,
                                                            html: transaction,
                                                            items: [
                                                            {
                                                                docked: 'top',
                                                                xtype: 'toolbar',
                                                                title: 'Transaction Results'
                                                            }
                                                            ],
                                                            scrollable: true
                                                        });
                                                    }

                                                    this.overlay.show();  


                                                    //Set the KaIcon hapo Kwa Transaction on TabPanel

                                                }, 
                                                //Failed.. Call this function..
                                                failure: function(result){
                                                    Ext.Viewport.setMasked(false); // hide the load screen
                                                    Ext.Msg.alert("Transaction Result", "Insufficient Funds in your Account to perform the Transaction");	
                                                },        
                                                scope: this
                                            });   

                                        }else{
                                            Ext.Msg.alert("Failure", "Error Occured!");
                                        }
                                    }else {
                                        alert("Read a non smart poster...");
                                    }
                                } else {
                                    alert("Message contained no (decodable) records...");
                                }

                            } else {
                                alert("Didn't understand this invokation...");
                            }

                        } catch (e) {
                            alert(e);
                        }


                    }else{

                    }
                },this
                );

            }else{
                Ext.Msg.alert("Error:","No transaction Records have been Set. Please Initiate a transaction");
            } 

        }// End of On-Invoked Function.

        try {
            blackberry.event.addEventListener("invoked", onInvoked);
        } catch (e) {
            alert("NFC was not detected: FlexiPay is Currently only supporting BlackBerry 10. We coming Soon!");
        }

        //what does this syntax mean??  
        window.addEventListener("load", function(e) {
            document.addEventListener("webworksready", ready)
        }, false);
        Ext.create('FlexiPay.view.Viewport', {fullscreen: true});
    }

});
